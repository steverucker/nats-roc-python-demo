//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class roc_template : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal roc_template(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(roc_template obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~roc_template() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          rocPINVOKE.delete_roc_template(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public uint algorithm_id {
    set {
      rocPINVOKE.roc_template_algorithm_id_set(swigCPtr, value);
    } 
    get {
      uint ret = rocPINVOKE.roc_template_algorithm_id_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_roc_time timestamp {
    set {
      rocPINVOKE.roc_template_timestamp_set(swigCPtr, SWIGTYPE_p_roc_time.getCPtr(value));
      if (rocPINVOKE.SWIGPendingException.Pending) throw rocPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_roc_time ret = new SWIGTYPE_p_roc_time(rocPINVOKE.roc_template_timestamp_get(swigCPtr), true);
      if (rocPINVOKE.SWIGPendingException.Pending) throw rocPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int x {
    set {
      rocPINVOKE.roc_template_x_set(swigCPtr, value);
    } 
    get {
      int ret = rocPINVOKE.roc_template_x_get(swigCPtr);
      return ret;
    } 
  }

  public int y {
    set {
      rocPINVOKE.roc_template_y_set(swigCPtr, value);
    } 
    get {
      int ret = rocPINVOKE.roc_template_y_get(swigCPtr);
      return ret;
    } 
  }

  public uint width {
    set {
      rocPINVOKE.roc_template_width_set(swigCPtr, value);
    } 
    get {
      uint ret = rocPINVOKE.roc_template_width_get(swigCPtr);
      return ret;
    } 
  }

  public uint height {
    set {
      rocPINVOKE.roc_template_height_set(swigCPtr, value);
    } 
    get {
      uint ret = rocPINVOKE.roc_template_height_get(swigCPtr);
      return ret;
    } 
  }

  public float confidence {
    set {
      rocPINVOKE.roc_template_confidence_set(swigCPtr, value);
    } 
    get {
      float ret = rocPINVOKE.roc_template_confidence_get(swigCPtr);
      return ret;
    } 
  }

  public uint person_id {
    set {
      rocPINVOKE.roc_template_person_id_set(swigCPtr, value);
    } 
    get {
      uint ret = rocPINVOKE.roc_template_person_id_get(swigCPtr);
      return ret;
    } 
  }

  public uint md_size {
    set {
      rocPINVOKE.roc_template_md_size_set(swigCPtr, value);
    } 
    get {
      uint ret = rocPINVOKE.roc_template_md_size_get(swigCPtr);
      return ret;
    } 
  }

  public uint fv_size {
    set {
      rocPINVOKE.roc_template_fv_size_set(swigCPtr, value);
    } 
    get {
      uint ret = rocPINVOKE.roc_template_fv_size_get(swigCPtr);
      return ret;
    } 
  }

  public uint tn_size {
    set {
      rocPINVOKE.roc_template_tn_size_set(swigCPtr, value);
    } 
    get {
      uint ret = rocPINVOKE.roc_template_tn_size_get(swigCPtr);
      return ret;
    } 
  }

  public string md {
    set {
      rocPINVOKE.roc_template_md_set(swigCPtr, value);
    } 
    get {
      string ret = rocPINVOKE.roc_template_md_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_char fv {
    set {
      rocPINVOKE.roc_template_fv_set(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = rocPINVOKE.roc_template_fv_get(swigCPtr);
      SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_char tn {
    set {
      rocPINVOKE.roc_template_tn_set(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = rocPINVOKE.roc_template_tn_get(swigCPtr);
      SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
      return ret;
    } 
  }

  public roc_template() : this(rocPINVOKE.new_roc_template(), true) {
  }

}
