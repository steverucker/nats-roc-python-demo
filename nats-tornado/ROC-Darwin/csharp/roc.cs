//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class roc {
  public static SWIGTYPE_p_float new_float() {
    global::System.IntPtr cPtr = rocPINVOKE.new_float();
    SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_float copy_float(float value) {
    global::System.IntPtr cPtr = rocPINVOKE.copy_float(value);
    SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
    return ret;
  }

  public static void delete_float(SWIGTYPE_p_float obj) {
    rocPINVOKE.delete_float(SWIGTYPE_p_float.getCPtr(obj));
  }

  public static void float_assign(SWIGTYPE_p_float obj, float value) {
    rocPINVOKE.float_assign(SWIGTYPE_p_float.getCPtr(obj), value);
  }

  public static float float_value(SWIGTYPE_p_float obj) {
    float ret = rocPINVOKE.float_value(SWIGTYPE_p_float.getCPtr(obj));
    return ret;
  }

  public static SWIGTYPE_p_unsigned_char new_uint8_t() {
    global::System.IntPtr cPtr = rocPINVOKE.new_uint8_t();
    SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_unsigned_char copy_uint8_t(byte value) {
    global::System.IntPtr cPtr = rocPINVOKE.copy_uint8_t(value);
    SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
    return ret;
  }

  public static void delete_uint8_t(SWIGTYPE_p_unsigned_char obj) {
    rocPINVOKE.delete_uint8_t(SWIGTYPE_p_unsigned_char.getCPtr(obj));
  }

  public static void uint8_t_assign(SWIGTYPE_p_unsigned_char obj, byte value) {
    rocPINVOKE.uint8_t_assign(SWIGTYPE_p_unsigned_char.getCPtr(obj), value);
  }

  public static byte uint8_t_value(SWIGTYPE_p_unsigned_char obj) {
    byte ret = rocPINVOKE.uint8_t_value(SWIGTYPE_p_unsigned_char.getCPtr(obj));
    return ret;
  }

  public static SWIGTYPE_p_size_t new_size_t() {
    global::System.IntPtr cPtr = rocPINVOKE.new_size_t();
    SWIGTYPE_p_size_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_size_t(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_size_t copy_size_t(uint value) {
    global::System.IntPtr cPtr = rocPINVOKE.copy_size_t(value);
    SWIGTYPE_p_size_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_size_t(cPtr, false);
    return ret;
  }

  public static void delete_size_t(SWIGTYPE_p_size_t obj) {
    rocPINVOKE.delete_size_t(SWIGTYPE_p_size_t.getCPtr(obj));
  }

  public static void size_t_assign(SWIGTYPE_p_size_t obj, uint value) {
    rocPINVOKE.size_t_assign(SWIGTYPE_p_size_t.getCPtr(obj), value);
  }

  public static uint size_t_value(SWIGTYPE_p_size_t obj) {
    uint ret = rocPINVOKE.size_t_value(SWIGTYPE_p_size_t.getCPtr(obj));
    return ret;
  }

  public static SWIGTYPE_p_p_roc_gallery_type new_roc_gallery() {
    global::System.IntPtr cPtr = rocPINVOKE.new_roc_gallery();
    SWIGTYPE_p_p_roc_gallery_type ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_roc_gallery_type(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p_roc_gallery_type copy_roc_gallery(SWIGTYPE_p_roc_gallery_type value) {
    global::System.IntPtr cPtr = rocPINVOKE.copy_roc_gallery(SWIGTYPE_p_roc_gallery_type.getCPtr(value));
    SWIGTYPE_p_p_roc_gallery_type ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_roc_gallery_type(cPtr, false);
    return ret;
  }

  public static void delete_roc_gallery(SWIGTYPE_p_p_roc_gallery_type obj) {
    rocPINVOKE.delete_roc_gallery(SWIGTYPE_p_p_roc_gallery_type.getCPtr(obj));
  }

  public static void roc_gallery_assign(SWIGTYPE_p_p_roc_gallery_type obj, SWIGTYPE_p_roc_gallery_type value) {
    rocPINVOKE.roc_gallery_assign(SWIGTYPE_p_p_roc_gallery_type.getCPtr(obj), SWIGTYPE_p_roc_gallery_type.getCPtr(value));
  }

  public static SWIGTYPE_p_roc_gallery_type roc_gallery_value(SWIGTYPE_p_p_roc_gallery_type obj) {
    global::System.IntPtr cPtr = rocPINVOKE.roc_gallery_value(SWIGTYPE_p_p_roc_gallery_type.getCPtr(obj));
    SWIGTYPE_p_roc_gallery_type ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_roc_gallery_type(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p_char new_roc_host_id() {
    global::System.IntPtr cPtr = rocPINVOKE.new_roc_host_id();
    SWIGTYPE_p_p_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_char(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_p_char copy_roc_host_id(string value) {
    global::System.IntPtr cPtr = rocPINVOKE.copy_roc_host_id(value);
    SWIGTYPE_p_p_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_char(cPtr, false);
    return ret;
  }

  public static void delete_roc_host_id(SWIGTYPE_p_p_char obj) {
    rocPINVOKE.delete_roc_host_id(SWIGTYPE_p_p_char.getCPtr(obj));
  }

  public static void roc_host_id_assign(SWIGTYPE_p_p_char obj, string value) {
    rocPINVOKE.roc_host_id_assign(SWIGTYPE_p_p_char.getCPtr(obj), value);
  }

  public static string roc_host_id_value(SWIGTYPE_p_p_char obj) {
    string ret = rocPINVOKE.roc_host_id_value(SWIGTYPE_p_p_char.getCPtr(obj));
    return ret;
  }

  public static SWIGTYPE_p_float new_roc_similarity() {
    global::System.IntPtr cPtr = rocPINVOKE.new_roc_similarity();
    SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_float copy_roc_similarity(float value) {
    global::System.IntPtr cPtr = rocPINVOKE.copy_roc_similarity(value);
    SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
    return ret;
  }

  public static void delete_roc_similarity(SWIGTYPE_p_float obj) {
    rocPINVOKE.delete_roc_similarity(SWIGTYPE_p_float.getCPtr(obj));
  }

  public static void roc_similarity_assign(SWIGTYPE_p_float obj, float value) {
    rocPINVOKE.roc_similarity_assign(SWIGTYPE_p_float.getCPtr(obj), value);
  }

  public static float roc_similarity_value(SWIGTYPE_p_float obj) {
    float ret = rocPINVOKE.roc_similarity_value(SWIGTYPE_p_float.getCPtr(obj));
    return ret;
  }

  public static string new_char_array(int nelements) {
    string ret = rocPINVOKE.new_char_array(nelements);
    return ret;
  }

  public static void delete_char_array(string ary) {
    rocPINVOKE.delete_char_array(ary);
  }

  public static char char_array_getitem(string ary, int index) {
    char ret = rocPINVOKE.char_array_getitem(ary, index);
    return ret;
  }

  public static void char_array_setitem(string ary, int index, char value) {
    rocPINVOKE.char_array_setitem(ary, index, value);
  }

  public static roc_template new_roc_template_array(int nelements) {
    global::System.IntPtr cPtr = rocPINVOKE.new_roc_template_array(nelements);
    roc_template ret = (cPtr == global::System.IntPtr.Zero) ? null : new roc_template(cPtr, false);
    return ret;
  }

  public static void delete_roc_template_array(roc_template ary) {
    rocPINVOKE.delete_roc_template_array(roc_template.getCPtr(ary));
  }

  public static roc_template roc_template_array_getitem(roc_template ary, int index) {
    roc_template ret = new roc_template(rocPINVOKE.roc_template_array_getitem(roc_template.getCPtr(ary), index), true);
    return ret;
  }

  public static void roc_template_array_setitem(roc_template ary, int index, roc_template value) {
    rocPINVOKE.roc_template_array_setitem(roc_template.getCPtr(ary), index, roc_template.getCPtr(value));
    if (rocPINVOKE.SWIGPendingException.Pending) throw rocPINVOKE.SWIGPendingException.Retrieve();
  }

  public static SWIGTYPE_p_float new_roc_similarity_array(int nelements) {
    global::System.IntPtr cPtr = rocPINVOKE.new_roc_similarity_array(nelements);
    SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
    return ret;
  }

  public static void delete_roc_similarity_array(SWIGTYPE_p_float ary) {
    rocPINVOKE.delete_roc_similarity_array(SWIGTYPE_p_float.getCPtr(ary));
  }

  public static float roc_similarity_array_getitem(SWIGTYPE_p_float ary, int index) {
    float ret = rocPINVOKE.roc_similarity_array_getitem(SWIGTYPE_p_float.getCPtr(ary), index);
    return ret;
  }

  public static void roc_similarity_array_setitem(SWIGTYPE_p_float ary, int index, float value) {
    rocPINVOKE.roc_similarity_array_setitem(SWIGTYPE_p_float.getCPtr(ary), index, value);
  }

  public static roc_candidate new_roc_candidate_array(int nelements) {
    global::System.IntPtr cPtr = rocPINVOKE.new_roc_candidate_array(nelements);
    roc_candidate ret = (cPtr == global::System.IntPtr.Zero) ? null : new roc_candidate(cPtr, false);
    return ret;
  }

  public static void delete_roc_candidate_array(roc_candidate ary) {
    rocPINVOKE.delete_roc_candidate_array(roc_candidate.getCPtr(ary));
  }

  public static roc_candidate roc_candidate_array_getitem(roc_candidate ary, int index) {
    roc_candidate ret = new roc_candidate(rocPINVOKE.roc_candidate_array_getitem(roc_candidate.getCPtr(ary), index), true);
    return ret;
  }

  public static void roc_candidate_array_setitem(roc_candidate ary, int index, roc_candidate value) {
    rocPINVOKE.roc_candidate_array_setitem(roc_candidate.getCPtr(ary), index, roc_candidate.getCPtr(value));
    if (rocPINVOKE.SWIGPendingException.Pending) throw rocPINVOKE.SWIGPendingException.Retrieve();
  }

  public static SWIGTYPE_p_unsigned_int new_roc_person_id_array(int nelements) {
    global::System.IntPtr cPtr = rocPINVOKE.new_roc_person_id_array(nelements);
    SWIGTYPE_p_unsigned_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_int(cPtr, false);
    return ret;
  }

  public static void delete_roc_person_id_array(SWIGTYPE_p_unsigned_int ary) {
    rocPINVOKE.delete_roc_person_id_array(SWIGTYPE_p_unsigned_int.getCPtr(ary));
  }

  public static uint roc_person_id_array_getitem(SWIGTYPE_p_unsigned_int ary, int index) {
    uint ret = rocPINVOKE.roc_person_id_array_getitem(SWIGTYPE_p_unsigned_int.getCPtr(ary), index);
    return ret;
  }

  public static void roc_person_id_array_setitem(SWIGTYPE_p_unsigned_int ary, int index, uint value) {
    rocPINVOKE.roc_person_id_array_setitem(SWIGTYPE_p_unsigned_int.getCPtr(ary), index, value);
  }

  public static void roc_ensure(string error) {
    rocPINVOKE.roc_ensure(error);
  }

  public static string roc_initialize(string sdk_path) {
    string ret = rocPINVOKE.roc_initialize(sdk_path);
    return ret;
  }

  public static string roc_finalize() {
    string ret = rocPINVOKE.roc_finalize();
    return ret;
  }

  public static string roc_get_host_id(SWIGTYPE_p_p_char host_id) {
    string ret = rocPINVOKE.roc_get_host_id(SWIGTYPE_p_p_char.getCPtr(host_id));
    return ret;
  }

  public static string roc_free_host_id(string host_id) {
    string ret = rocPINVOKE.roc_free_host_id(host_id);
    return ret;
  }

  public static string roc_free_image(roc_image image) {
    string ret = rocPINVOKE.roc_free_image(roc_image.getCPtr(image));
    if (rocPINVOKE.SWIGPendingException.Pending) throw rocPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string roc_read_image(string file_name, roc_color_space color_space, roc_image image) {
    string ret = rocPINVOKE.roc_read_image(file_name, (int)color_space, roc_image.getCPtr(image));
    return ret;
  }

  public static string roc_decode_image(uint len, SWIGTYPE_p_unsigned_char data, roc_color_space color_space, roc_image image) {
    string ret = rocPINVOKE.roc_decode_image(len, SWIGTYPE_p_unsigned_char.getCPtr(data), (int)color_space, roc_image.getCPtr(image));
    return ret;
  }

  public static string roc_set_thumbnail_parameters(int width, int height, float scale, float quality) {
    string ret = rocPINVOKE.roc_set_thumbnail_parameters(width, height, scale, quality);
    return ret;
  }

  public static string roc_preload(uint algorithm_id) {
    string ret = rocPINVOKE.roc_preload(algorithm_id);
    return ret;
  }

  public static string roc_landmarks_to_face(float left_eye_x, float left_eye_y, float right_eye_x, float right_eye_y, float chin_x, float chin_y, SWIGTYPE_p_float face_x, SWIGTYPE_p_float face_y, SWIGTYPE_p_float face_width, SWIGTYPE_p_float face_height) {
    string ret = rocPINVOKE.roc_landmarks_to_face(left_eye_x, left_eye_y, right_eye_x, right_eye_y, chin_x, chin_y, SWIGTYPE_p_float.getCPtr(face_x), SWIGTYPE_p_float.getCPtr(face_y), SWIGTYPE_p_float.getCPtr(face_width), SWIGTYPE_p_float.getCPtr(face_height));
    return ret;
  }

  public static string roc_represent(roc_image image, uint algorithm_id, uint min_size, uint k, float false_detection_rate, roc_template templates) {
    string ret = rocPINVOKE.roc_represent(roc_image.getCPtr(image), algorithm_id, min_size, k, false_detection_rate, roc_template.getCPtr(templates));
    if (rocPINVOKE.SWIGPendingException.Pending) throw rocPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string roc_free_template(roc_template template_) {
    string ret = rocPINVOKE.roc_free_template(roc_template.getCPtr(template_));
    return ret;
  }

  public static string roc_flatten(roc_template template_, SWIGTYPE_p_unsigned_char buffer) {
    string ret = rocPINVOKE.roc_flatten(roc_template.getCPtr(template_), SWIGTYPE_p_unsigned_char.getCPtr(buffer));
    if (rocPINVOKE.SWIGPendingException.Pending) throw rocPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string roc_unflatten(SWIGTYPE_p_unsigned_char buffer, roc_template template_) {
    string ret = rocPINVOKE.roc_unflatten(SWIGTYPE_p_unsigned_char.getCPtr(buffer), roc_template.getCPtr(template_));
    return ret;
  }

  public static string roc_flattened_bytes(roc_template template_, SWIGTYPE_p_size_t bytes) {
    string ret = rocPINVOKE.roc_flattened_bytes(roc_template.getCPtr(template_), SWIGTYPE_p_size_t.getCPtr(bytes));
    if (rocPINVOKE.SWIGPendingException.Pending) throw rocPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string roc_read_template(SWIGTYPE_p_FILE file, roc_template template_) {
    string ret = rocPINVOKE.roc_read_template(SWIGTYPE_p_FILE.getCPtr(file), roc_template.getCPtr(template_));
    return ret;
  }

  public static string roc_read_template_fd(int fd, roc_template template_) {
    string ret = rocPINVOKE.roc_read_template_fd(fd, roc_template.getCPtr(template_));
    return ret;
  }

  public static string roc_write_template(SWIGTYPE_p_FILE file, roc_template template_) {
    string ret = rocPINVOKE.roc_write_template(SWIGTYPE_p_FILE.getCPtr(file), roc_template.getCPtr(template_));
    if (rocPINVOKE.SWIGPendingException.Pending) throw rocPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string roc_write_template_fd(int fd, roc_template template_) {
    string ret = rocPINVOKE.roc_write_template_fd(fd, roc_template.getCPtr(template_));
    if (rocPINVOKE.SWIGPendingException.Pending) throw rocPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string roc_get_metadata(roc_template template_, string key, string value, uint value_length) {
    string ret = rocPINVOKE.roc_get_metadata(roc_template.getCPtr(template_), key, value, value_length);
    if (rocPINVOKE.SWIGPendingException.Pending) throw rocPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string roc_set_metadata(roc_template template_, string key, string value) {
    string ret = rocPINVOKE.roc_set_metadata(roc_template.getCPtr(template_), key, value);
    return ret;
  }

  public static string roc_open_gallery(string gallery_file, SWIGTYPE_p_p_roc_gallery_type gallery, SWIGTYPE_p_f_float__void progress) {
    string ret = rocPINVOKE.roc_open_gallery(gallery_file, SWIGTYPE_p_p_roc_gallery_type.getCPtr(gallery), SWIGTYPE_p_f_float__void.getCPtr(progress));
    return ret;
  }

  public static string roc_temporary_gallery(SWIGTYPE_p_p_roc_gallery_type gallery) {
    string ret = rocPINVOKE.roc_temporary_gallery(SWIGTYPE_p_p_roc_gallery_type.getCPtr(gallery));
    return ret;
  }

  public static string roc_enroll(SWIGTYPE_p_roc_gallery_type gallery, roc_template template_) {
    string ret = rocPINVOKE.roc_enroll(SWIGTYPE_p_roc_gallery_type.getCPtr(gallery), roc_template.getCPtr(template_));
    if (rocPINVOKE.SWIGPendingException.Pending) throw rocPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string roc_size(SWIGTYPE_p_roc_gallery_type gallery, SWIGTYPE_p_size_t size) {
    string ret = rocPINVOKE.roc_size(SWIGTYPE_p_roc_gallery_type.getCPtr(gallery), SWIGTYPE_p_size_t.getCPtr(size));
    return ret;
  }

  public static uint ROC_INVALID_TEMPLATE_INDEX {
    get {
      uint ret = rocPINVOKE.ROC_INVALID_TEMPLATE_INDEX_get();
      return ret;
    } 
  }

  public static string roc_at(SWIGTYPE_p_roc_gallery_type gallery, uint index, roc_template template_) {
    string ret = rocPINVOKE.roc_at(SWIGTYPE_p_roc_gallery_type.getCPtr(gallery), index, roc_template.getCPtr(template_));
    return ret;
  }

  public static string roc_remove(SWIGTYPE_p_roc_gallery_type gallery, uint index) {
    string ret = rocPINVOKE.roc_remove(SWIGTYPE_p_roc_gallery_type.getCPtr(gallery), index);
    return ret;
  }

  public static string roc_close_gallery(SWIGTYPE_p_roc_gallery_type gallery) {
    string ret = rocPINVOKE.roc_close_gallery(SWIGTYPE_p_roc_gallery_type.getCPtr(gallery));
    return ret;
  }

  public static string roc_template_limit(SWIGTYPE_p_size_t template_limit) {
    string ret = rocPINVOKE.roc_template_limit(SWIGTYPE_p_size_t.getCPtr(template_limit));
    return ret;
  }

  public static string roc_compare_templates(roc_template a, roc_template b, SWIGTYPE_p_float similarity) {
    string ret = rocPINVOKE.roc_compare_templates(roc_template.getCPtr(a), roc_template.getCPtr(b), SWIGTYPE_p_float.getCPtr(similarity));
    if (rocPINVOKE.SWIGPendingException.Pending) throw rocPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string roc_compare_galleries(SWIGTYPE_p_roc_gallery_type target, SWIGTYPE_p_roc_gallery_type query, SWIGTYPE_p_float similarity_matrix) {
    string ret = rocPINVOKE.roc_compare_galleries(SWIGTYPE_p_roc_gallery_type.getCPtr(target), SWIGTYPE_p_roc_gallery_type.getCPtr(query), SWIGTYPE_p_float.getCPtr(similarity_matrix));
    return ret;
  }

  public static string roc_search(SWIGTYPE_p_roc_gallery_type gallery, roc_template probe, uint k, float min_similarity, roc_candidate candidates) {
    string ret = rocPINVOKE.roc_search(SWIGTYPE_p_roc_gallery_type.getCPtr(gallery), roc_template.getCPtr(probe), k, min_similarity, roc_candidate.getCPtr(candidates));
    if (rocPINVOKE.SWIGPendingException.Pending) throw rocPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string roc_knn(SWIGTYPE_p_roc_gallery_type gallery, SWIGTYPE_p_roc_gallery_type probes, uint k, float min_similarity, roc_candidate neighbors) {
    string ret = rocPINVOKE.roc_knn(SWIGTYPE_p_roc_gallery_type.getCPtr(gallery), SWIGTYPE_p_roc_gallery_type.getCPtr(probes), k, min_similarity, roc_candidate.getCPtr(neighbors));
    return ret;
  }

  public static string roc_rerank(SWIGTYPE_p_roc_gallery_type gallery, uint k, roc_candidate candidates) {
    string ret = rocPINVOKE.roc_rerank(SWIGTYPE_p_roc_gallery_type.getCPtr(gallery), k, roc_candidate.getCPtr(candidates));
    return ret;
  }

  public static string roc_cluster(SWIGTYPE_p_roc_gallery_type gallery, uint k, roc_candidate neighbors, float aggressiveness) {
    string ret = rocPINVOKE.roc_cluster(SWIGTYPE_p_roc_gallery_type.getCPtr(gallery), k, roc_candidate.getCPtr(neighbors), aggressiveness);
    return ret;
  }

  public static string roc_track(SWIGTYPE_p_roc_gallery_type gallery, SWIGTYPE_p_roc_time max_time_separation, float min_detection_overlap, float min_similarity) {
    string ret = rocPINVOKE.roc_track(SWIGTYPE_p_roc_gallery_type.getCPtr(gallery), SWIGTYPE_p_roc_time.getCPtr(max_time_separation), min_detection_overlap, min_similarity);
    if (rocPINVOKE.SWIGPendingException.Pending) throw rocPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string roc_consolidate(SWIGTYPE_p_roc_gallery_type gallery, float max_similarity, uint max_count) {
    string ret = rocPINVOKE.roc_consolidate(SWIGTYPE_p_roc_gallery_type.getCPtr(gallery), max_similarity, max_count);
    return ret;
  }

  public static string roc_person_ids(SWIGTYPE_p_roc_gallery_type gallery, SWIGTYPE_p_unsigned_int person_ids) {
    string ret = rocPINVOKE.roc_person_ids(SWIGTYPE_p_roc_gallery_type.getCPtr(gallery), SWIGTYPE_p_unsigned_int.getCPtr(person_ids));
    return ret;
  }

  public static readonly int ROC_VERSION_MAJOR = rocPINVOKE.ROC_VERSION_MAJOR_get();
  public static readonly int ROC_VERSION_MINOR = rocPINVOKE.ROC_VERSION_MINOR_get();
  public static readonly int ROC_VERSION_PATCH = rocPINVOKE.ROC_VERSION_PATCH_get();
  public static readonly string ROC_VERSION_STRING = rocPINVOKE.ROC_VERSION_STRING_get();
  public static readonly int ROC_NO_TIMESTAMP = rocPINVOKE.ROC_NO_TIMESTAMP_get();
  public static readonly int ROC_UNKNOWN_PERSON = rocPINVOKE.ROC_UNKNOWN_PERSON_get();
}
